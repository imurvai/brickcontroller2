<?xml version="1.0" encoding="utf-8" ?>
<local:PageBase
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:BrickController2.UI.Controls"
    xmlns:converters="clr-namespace:BrickController2.UI.Converters"
    xmlns:creationManagement="clr-namespace:BrickController2.CreationManagement"
    xmlns:extensions="clr-namespace:BrickController2.UI.MarkupExtensions"
    xmlns:gameController="clr-namespace:BrickController2.PlatformServices.GameController"
    xmlns:local="clr-namespace:BrickController2.UI.Pages"
    x:Class="BrickController2.UI.Pages.ControllerActionPage"
    Title="{extensions:Translate ControllerAction}">

    <local:PageBase.Resources>
        <ResourceDictionary>
            <converters:DeviceTypeToChannelOutputVisibleConverter x:Key="DeviceTypeToChannelOutputVisible"/>
        </ResourceDictionary>
    </local:PageBase.Resources>

    <local:PageBase.ToolbarItems>
        <ToolbarItem Icon="ic_trashbin_white.png" Order="Primary" Command="{Binding DeleteControllerActionCommand}"/>
        <ToolbarItem Icon="ic_checkmark_white.png" Order="Primary" Command="{Binding SaveControllerActionCommand}"/>
    </local:PageBase.ToolbarItems>

    <local:PageBase.Content>
        <ScrollView>
            <StackLayout Orientation="Vertical" Padding="20">
            
                <!-- Device selector -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Text="{extensions:Translate Device}" VerticalOptions="Center"/>
                    <Picker Grid.Column="1" Title="{extensions:Translate SelectDevice}" ItemsSource="{Binding Devices}" SelectedItem="{Binding SelectedDevice}"></Picker>
                    <controls:FloatingActionButton Grid.Column="2" ButtonColor="Green" ImageSource="{extensions:ImageResource Source=ic_link_white.png}" Command="{Binding OpenDeviceDetailsCommand}" VerticalOptions="Center"/>
                </Grid>

                <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>

                <!-- Device channel selector -->
                <controls:DeviceChannelSelector DeviceType="{Binding SelectedDevice.DeviceType}" SelectedChannel="{Binding Action.Channel}"/>
                
                <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>

                <!-- Invert switch -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Text="{extensions:Translate Invert}" VerticalOptions="Center"/>
                    <Switch Grid.Column="1" IsToggled="{Binding Action.IsInvert}" HorizontalOptions="Start"/>
                </Grid>

                <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                <Label Text="{extensions:Translate AdvancedSettings}" FontSize="Medium" FontAttributes="Bold" Margin="0,5,0,5"/>

                <StackLayout Orientation="Vertical" IsVisible="{Binding SelectedDevice.DeviceType, Converter={StaticResource DeviceTypeToChannelOutputVisible}}">
                    <!-- Channel output type selector -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Text="{extensions:Translate ChannelType}" VerticalOptions="Center"/>

                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <controls:EnumPicker Grid.Column="0" x:TypeArguments="creationManagement:ChannelOutputType" SelectedItem="{Binding Action.ChannelOutputType}"/>
                            <controls:FloatingActionButton Grid.Column="1" ButtonColor="Green" ImageSource="{extensions:ImageResource Source=ic_settings_white.png}" Command="{Binding OpenChannelSetupCommand}" IsVisible="False">
                                <controls:FloatingActionButton.Triggers>
                                    <DataTrigger TargetType="controls:FloatingActionButton" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.ServoMotor}">
                                        <Setter Property="IsVisible" Value="True"/>
                                    </DataTrigger>
                                </controls:FloatingActionButton.Triggers>
                            </controls:FloatingActionButton>
                        </Grid>
                    </Grid>

                    <!-- Max servo angle setting -->
                    <StackLayout Orientation="Vertical" IsVisible="False">
                        <StackLayout.Triggers>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.ServoMotor}">
                                <Setter Property="IsVisible" Value="True"/>
                            </DataTrigger>
                        </StackLayout.Triggers>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Text="{extensions:Translate ServoAngle}"/>
                            <StackLayout Grid.Column="1" Orientation="Horizontal">
                                <controls:ExtendedSlider Value="{Binding Action.MaxServoAngle}" Minimum="0" Maximum="180" Step="5" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                                <Label Text="{Binding Action.MaxServoAngle}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                                <Label Text="°"/>
                            </StackLayout>
                        </Grid>
                    </StackLayout>

                    <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                </StackLayout>

                <!-- Button type selector -->
                <StackLayout Orientation="Vertical" IsVisible="False">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Button}">
                            <Setter Property="IsVisible" Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Text="{extensions:Translate ButtonType}" VerticalOptions="Center"/>
                        <controls:EnumPicker Grid.Column="1" x:TypeArguments="creationManagement:ControllerButtonType" SelectedItem="{Binding Action.ButtonType}"/>
                    </Grid>

                    <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                </StackLayout>

                <!-- Axis type selector -->
                <StackLayout Orientation="Vertical" IsVisible="False">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Axis}">
                            <Setter Property="IsVisible" Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Text="{extensions:Translate AxisType}" VerticalOptions="Center"/>
                        <controls:EnumPicker Grid.Column="1" x:TypeArguments="creationManagement:ControllerAxisType" SelectedItem="{Binding Action.AxisType}"/>
                    </Grid>

                    <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                </StackLayout>

                <!-- Axis characteristic selector -->
                <StackLayout Orientation="Vertical" IsVisible="False">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Axis}">
                            <Setter Property="IsVisible" Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Text="{extensions:Translate AxisCharacteristic}" VerticalOptions="Center"/>
                        <controls:EnumPicker Grid.Column="1" x:TypeArguments="creationManagement:ControllerAxisCharacteristic" SelectedItem="{Binding Action.AxisCharacteristic}"/>
                    </Grid>

                    <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                </StackLayout>

                <!-- Max output percent -->
                <StackLayout Orientation="Vertical" IsVisible="False">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.NormalMotor}">
                            <Setter Property="IsVisible" Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Text="{extensions:Translate MaxOutput}"/>
                        <StackLayout Grid.Column="1" Orientation="Horizontal">
                            <Slider Value="{Binding Action.MaxOutputPercent}" Minimum="0" Maximum="100" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                            <Label Text="{Binding Action.MaxOutputPercent}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                            <Label Text="%"/>
                        </StackLayout>
                    </Grid>

                    <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                </StackLayout>

                <!-- Axis dead zone percent -->
                <StackLayout Orientation="Vertical" IsVisible="False">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Axis}">
                            <Setter Property="IsVisible" Value="True"/>
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Text="{extensions:Translate AxisDeadZone}"/>
                        <StackLayout Grid.Column="1" Orientation="Horizontal">
                            <Slider Value="{Binding Action.AxisDeadZonePercent}" Minimum="0" Maximum="100" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                            <Label Text="{Binding Action.AxisDeadZonePercent}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                            <Label Text="%"/>
                        </StackLayout>
                    </Grid>

                    <BoxView BackgroundColor="#E0E0E0" HeightRequest="1" VerticalOptions="Center" HorizontalOptions="Fill" Margin="5,8,5,8"/>
                </StackLayout>

            </StackLayout>
        </ScrollView>
    </local:PageBase.Content>
</local:PageBase>